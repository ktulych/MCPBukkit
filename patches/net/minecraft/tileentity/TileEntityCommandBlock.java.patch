--- ../net/minecraft/tileentity/TileEntityCommandBlock.java
+++ ../net/minecraft/tileentity/TileEntityCommandBlock.java
@@ -1,7 +1,11 @@
 package net.minecraft.tileentity;
 
-import net.minecraft.command.ICommandManager;
+// CraftBukkit start
+import java.util.ArrayList;
+import com.google.common.base.Joiner;
 import net.minecraft.command.ICommandSender;
+import net.minecraft.command.PlayerSelector;
+import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.network.packet.Packet;
 import net.minecraft.network.packet.Packet132TileEntityData;
@@ -9,12 +13,21 @@
 import net.minecraft.util.ChatMessageComponent;
 import net.minecraft.util.ChunkCoordinates;
 import net.minecraft.world.World;
+// CraftBukkit end
 
 public class TileEntityCommandBlock extends TileEntity implements ICommandSender
 {
     private int field_96106_a;
-    private String field_82354_a = "";
+    public String field_82354_a = ""; // CraftBukkit - private -> public
     private String field_96105_c = "@";
+    // CraftBukkit start
+    private final org.bukkit.command.BlockCommandSender sender;
+
+    public TileEntityCommandBlock()
+    {
+        sender = new org.bukkit.craftbukkit.command.CraftBlockCommandSender(this);
+    }
+    // CraftBukkit end
 
     public void func_82352_b(String p_82352_1_)
     {
@@ -34,8 +47,108 @@
 
             if (minecraftserver != null && minecraftserver.func_82356_Z())
             {
-                ICommandManager icommandmanager = minecraftserver.func_71187_D();
-                return icommandmanager.func_71556_a(this, this.field_82354_a);
+                // CraftBukkit start - Handle command block commands using Bukkit dispatcher
+                org.bukkit.command.SimpleCommandMap commandMap = minecraftserver.server.getCommandMap();
+                Joiner joiner = Joiner.on(" ");
+                String command = this.field_82354_a;
+
+                if (this.field_82354_a.startsWith("/"))
+                {
+                    command = this.field_82354_a.substring(1);
+                }
+
+                String[] args = command.split(" ");
+                ArrayList<String[]> commands = new ArrayList<String[]>();
+
+                // Block disallowed commands
+                if (args[0].equalsIgnoreCase("stop") || args[0].equalsIgnoreCase("kick") || args[0].equalsIgnoreCase("op") ||
+                        args[0].equalsIgnoreCase("deop") || args[0].equalsIgnoreCase("ban") || args[0].equalsIgnoreCase("ban-ip") ||
+                        args[0].equalsIgnoreCase("pardon") || args[0].equalsIgnoreCase("pardon-ip") || args[0].equalsIgnoreCase("reload"))
+                {
+                    return 0;
+                }
+
+                // Make sure this is a valid command
+                if (commandMap.getCommand(args[0]) == null)
+                {
+                    return 0;
+                }
+
+                // If the world has no players don't run
+                if (this.field_70331_k.field_73010_i.isEmpty())
+                {
+                    return 0;
+                }
+
+                // testfor command requires special handling
+                if (args[0].equalsIgnoreCase("testfor"))
+                {
+                    if (args.length < 2)
+                    {
+                        return 0;
+                    }
+
+                    EntityPlayerMP[] players = PlayerSelector.func_82380_c(this, args[1]);
+
+                    if (players != null && players.length > 0)
+                    {
+                        return players.length;
+                    }
+                    else
+                    {
+                        EntityPlayerMP player = MinecraftServer.func_71276_C().func_71203_ab().func_72361_f(args[1]);
+
+                        if (player == null)
+                        {
+                            return 0;
+                        }
+                        else
+                        {
+                            return 1;
+                        }
+                    }
+                }
+
+                commands.add(args);
+                // Find positions of command block syntax, if any
+                ArrayList<String[]> newCommands = new ArrayList<String[]>();
+
+                for (int i = 0; i < args.length; i++)
+                {
+                    if (PlayerSelector.func_82378_b(args[i]))
+                    {
+                        for (int j = 0; j < commands.size(); j++)
+                        {
+                            newCommands.addAll(this.buildCommands(commands.get(j), i));
+                        }
+
+                        ArrayList<String[]> temp = commands;
+                        commands = newCommands;
+                        newCommands = temp;
+                        newCommands.clear();
+                    }
+                }
+
+                int completed = 0;
+
+                // Now dispatch all of the commands we ended up with
+                for (int i = 0; i < commands.size(); i++)
+                {
+                    try
+                    {
+                        if (commandMap.dispatch(sender, joiner.join(java.util.Arrays.asList(commands.get(i)))))
+                        {
+                            completed++;
+                        }
+                    }
+                    catch (Throwable exception)
+                    {
+                        minecraftserver.func_98033_al().func_98235_b(String.format("CommandBlock at (%d,%d,%d) failed to handle command", this.field_70329_l, this.field_70330_m, this.field_70327_n), exception);
+                    }
+                }
+
+                return completed;
+                // CraftBukkit end
             }
             else
             {
@@ -44,6 +157,31 @@
         }
     }
 
+    // CraftBukkit start
+    private ArrayList<String[]> buildCommands(String[] args, int pos)
+    {
+        ArrayList<String[]> commands = new ArrayList<String[]>();
+        EntityPlayerMP[] players = PlayerSelector.func_82380_c(this, args[pos]);
+
+        if (players != null)
+        {
+            for (EntityPlayerMP player : players)
+            {
+                if (player.field_70170_p != this.field_70331_k)
+                {
+                    continue;
+                }
+
+                String[] command = args.clone();
+                command[pos] = player.func_70023_ak();
+                commands.add(command);
+            }
+        }
+
+        return commands;
+    }
+    // CraftBukkit end
+
     public String func_70005_c_()
     {
         return this.field_96105_c;
