--- ../net/minecraft/tileentity/TileEntityHopper.java
+++ ../net/minecraft/tileentity/TileEntityHopper.java
@@ -7,9 +7,11 @@
 import net.minecraft.command.IEntitySelector;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.item.EntityItem;
+import net.minecraft.entity.item.EntityMinecartHopper;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.inventory.IInventory;
 import net.minecraft.inventory.ISidedInventory;
+import net.minecraft.inventory.InventoryLargeChest;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.nbt.NBTTagList;
@@ -18,12 +20,53 @@
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.World;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.event.inventory.InventoryMoveItemEvent;
+import org.bukkit.event.inventory.InventoryPickupItemEvent;
+import org.bukkit.inventory.Inventory;
+// CraftBukkit end
+
 public class TileEntityHopper extends TileEntity implements Hopper
 {
     private ItemStack[] field_94124_b = new ItemStack[5];
     private String field_94123_d;
     private int field_98048_c = -1;
 
+    // CraftBukkit start
+    public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
+    private int maxStack = MAX_STACK;
+
+    public ItemStack[] getContents()
+    {
+        return this.field_94124_b;
+    }
+
+    public void onOpen(CraftHumanEntity who)
+    {
+        transaction.add(who);
+    }
+
+    public void onClose(CraftHumanEntity who)
+    {
+        transaction.remove(who);
+    }
+
+    public List<HumanEntity> getViewers()
+    {
+        return transaction;
+    }
+
+    public void setMaxStackSize(int size)
+    {
+        maxStack = size;
+    }
+    // CraftBukkit end
+
+    public TileEntityHopper() {}
+
     public void func_70307_a(NBTTagCompound p_70307_1_)
     {
         super.func_70307_a(p_70307_1_);
@@ -231,11 +274,44 @@
                 if (this.func_70301_a(i) != null)
                 {
                     ItemStack itemstack = this.func_70301_a(i).func_77946_l();
-                    ItemStack itemstack1 = func_94117_a(iinventory, this.func_70298_a(i, 1), Facing.field_71588_a[BlockHopper.func_94451_c(this.func_70322_n())]);
+                    // CraftBukkit start - Call event when pushing items into other inventories
+                    CraftItemStack oitemstack = CraftItemStack.asCraftMirror(this.func_70298_a(i, 1));
+                    Inventory destinationInventory;
+
+                    // Have to special case large chests as they work oddly
+                    if (iinventory instanceof InventoryLargeChest)
+                    {
+                        destinationInventory = new org.bukkit.craftbukkit.inventory.CraftInventoryDoubleChest((InventoryLargeChest) iinventory);
+                    }
+                    else
+                    {
+                        destinationInventory = iinventory.getOwner().getInventory();
+                    }
+
+                    InventoryMoveItemEvent event = new InventoryMoveItemEvent(this.getOwner().getInventory(), oitemstack.clone(), destinationInventory, true);
+                    this.func_70314_l().getServer().getPluginManager().callEvent(event);
+
+                    if (event.isCancelled())
+                    {
+                        this.func_70299_a(i, itemstack);
+                        this.func_98046_c(8); // Delay hopper checks
+                        return false;
+                    }
+
+                    ItemStack itemstack1 = func_94117_a(iinventory, CraftItemStack.asNMSCopy(event.getItem()), Facing.field_71588_a[BlockHopper.func_94451_c(this.func_70322_n())]);
 
                     if (itemstack1 == null || itemstack1.field_77994_a == 0)
                     {
-                        iinventory.func_70296_d();
+                        if (event.getItem().equals(oitemstack))
+                        {
+                            iinventory.func_70296_d();
+                        }
+                        else
+                        {
+                            this.func_70299_a(i, itemstack);
+                        }
+
+                        // CraftBukkit end
                         return true;
                     }
 
@@ -301,11 +377,53 @@
         if (itemstack != null && func_102013_b(p_102012_1_, itemstack, p_102012_2_, p_102012_3_))
         {
             ItemStack itemstack1 = itemstack.func_77946_l();
-            ItemStack itemstack2 = func_94117_a(p_102012_0_, p_102012_1_.func_70298_a(p_102012_2_, 1), -1);
+            // CraftBukkit start - Call event on collection of items from inventories into the hopper
+            CraftItemStack oitemstack = CraftItemStack.asCraftMirror(p_102012_1_.func_70298_a(p_102012_2_, 1));
+            Inventory sourceInventory;
+
+            // Have to special case large chests as they work oddly
+            if (p_102012_1_ instanceof InventoryLargeChest)
+            {
+                sourceInventory = new org.bukkit.craftbukkit.inventory.CraftInventoryDoubleChest((InventoryLargeChest) p_102012_1_);
+            }
+            else
+            {
+                sourceInventory = p_102012_1_.getOwner().getInventory();
+            }
+
+            InventoryMoveItemEvent event = new InventoryMoveItemEvent(sourceInventory, oitemstack.clone(), p_102012_0_.getOwner().getInventory(), false);
+            p_102012_0_.func_70314_l().getServer().getPluginManager().callEvent(event);
+
+            if (event.isCancelled())
+            {
+                p_102012_1_.func_70299_a(p_102012_2_, itemstack1);
+
+                if (p_102012_0_ instanceof TileEntityHopper)
+                {
+                    ((TileEntityHopper) p_102012_0_).func_98046_c(8); // Delay hopper checks
+                }
+                else if (p_102012_0_ instanceof EntityMinecartHopper)
+                {
+                    ((EntityMinecartHopper) p_102012_0_).func_98042_n(4); // Delay hopper minecart checks
+                }
+
+                return false;
+            }
+
+            ItemStack itemstack2 = func_94117_a(p_102012_0_, CraftItemStack.asNMSCopy(event.getItem()), -1);
 
             if (itemstack2 == null || itemstack2.field_77994_a == 0)
             {
-                p_102012_1_.func_70296_d();
+                if (event.getItem().equals(oitemstack))
+                {
+                    p_102012_1_.func_70296_d();
+                }
+                else
+                {
+                    p_102012_1_.func_70299_a(p_102012_2_, itemstack1);
+                }
+
+                // CraftBukkit end
                 return true;
             }
 
@@ -325,6 +443,16 @@
         }
         else
         {
+            // CraftBukkit start
+            InventoryPickupItemEvent event = new InventoryPickupItemEvent(p_96114_0_.getOwner().getInventory(), (org.bukkit.entity.Item) p_96114_1_.getBukkitEntity());
+            p_96114_1_.field_70170_p.getServer().getPluginManager().callEvent(event);
+
+            if (event.isCancelled())
+            {
+                return false;
+            }
+
+            // CraftBukkit end
             ItemStack itemstack = p_96114_1_.func_92059_d().func_77946_l();
             ItemStack itemstack1 = func_94117_a(p_96114_0_, itemstack, -1);
 
