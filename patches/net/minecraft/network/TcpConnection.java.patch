--- ../net/minecraft/network/TcpConnection.java
+++ ../net/minecraft/network/TcpConnection.java
@@ -2,8 +2,8 @@
 
 import java.io.BufferedOutputStream;
 import java.io.DataInputStream;
+import java.io.DataOutput;
 import java.io.DataOutputStream;
-import java.io.IOException;
 import java.io.InputStream;
 import java.net.Socket;
 import java.net.SocketAddress;
@@ -22,19 +22,21 @@
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.CryptManager;
 
+import java.io.IOException; // CraftBukkit
+
 public class TcpConnection implements INetworkManager
 {
     public static AtomicInteger field_74471_a = new AtomicInteger();
     public static AtomicInteger field_74469_b = new AtomicInteger();
     private final Object field_74478_h = new Object();
     private final ILogAgent field_98215_i;
-    private Socket field_74479_i;
+    public Socket field_74479_i; // CraftBukkit - private -> public
     private final SocketAddress field_74476_j;
     private volatile DataInputStream field_74477_k;
     private volatile DataOutputStream field_74474_l;
     private volatile boolean field_74475_m = true;
     private volatile boolean field_74472_n;
-    private List field_74473_o = Collections.synchronizedList(new ArrayList());
+    private java.util.Queue field_74473_o = new java.util.concurrent.ConcurrentLinkedQueue(); // CraftBukkit - Concurrent linked queue
     private List field_74487_p = Collections.synchronizedList(new ArrayList());
     private List field_74486_q = Collections.synchronizedList(new ArrayList());
     private NetHandler field_74485_r;
@@ -54,7 +56,7 @@
     private PrivateKey field_74463_A;
     private int field_74464_B = 50;
 
-    public TcpConnection(ILogAgent p_i1398_1_, Socket p_i1398_2_, String p_i1398_3_, NetHandler p_i1398_4_, PrivateKey p_i1398_5_) throws IOException
+    public TcpConnection(ILogAgent p_i1398_1_, Socket p_i1398_2_, String p_i1398_3_, NetHandler p_i1398_4_, PrivateKey p_i1398_5_) throws IOException   // CraftBukkit - throws IOException
     {
         this.field_74463_A = p_i1398_5_;
         this.field_74479_i = p_i1398_2_;
@@ -115,7 +117,7 @@
 
                 if (packet != null)
                 {
-                    Packet.func_73266_a(packet, this.field_74474_l);
+                    Packet.func_73266_a(packet, (DataOutput) this.field_74474_l);
 
                     if (packet instanceof Packet252SharedKey && !this.field_74466_g)
                     {
@@ -134,13 +136,14 @@
                 }
             }
 
-            if (this.field_74464_B-- <= 0 && (this.field_74468_e == 0 || !this.field_74486_q.isEmpty() && MinecraftServer.func_130071_aq() - ((Packet)this.field_74486_q.get(0)).field_73295_m >= (long)this.field_74468_e))
+            // CraftBukkit - don't allow low priority packet to be sent unless it was placed in the queue before the first packet on the high priority queue TODO: is this still right?
+            if ((flag || this.field_74464_B-- <= 0) && !this.field_74486_q.isEmpty() && (this.field_74487_p.isEmpty() || ((Packet) this.field_74487_p.get(0)).field_73295_m > ((Packet) this.field_74486_q.get(0)).field_73295_m))
             {
                 packet = this.func_74460_a(true);
 
                 if (packet != null)
                 {
-                    Packet.func_73266_a(packet, this.field_74474_l);
+                    Packet.func_73266_a(packet, (DataOutput) this.field_74474_l);
                     aint = field_74467_d;
                     i = packet.func_73281_k();
                     aint[i] += packet.func_73284_a() + 1;
@@ -284,7 +287,7 @@
 
     private void func_74455_a(Exception p_74455_1_)
     {
-        p_74455_1_.printStackTrace();
+        // exception.printStackTrace(); // CraftBukkit - Remove console spam
         this.func_74424_a("disconnect.genericReason", new Object[] {"Internal exception: " + p_74455_1_.toString()});
     }
 
@@ -354,7 +357,15 @@
 
         while (!this.field_74473_o.isEmpty() && i-- >= 0)
         {
-            Packet packet = (Packet)this.field_74473_o.remove(0);
+            Packet packet = (Packet) this.field_74473_o.poll(); // CraftBukkit - remove -> poll
+
+            // CraftBukkit start
+            if (this.field_74485_r instanceof NetLoginHandler ? ((NetLoginHandler) this.field_74485_r).field_72539_c : ((NetServerHandler) this.field_74485_r).field_72576_c)
+            {
+                continue;
+            }
+
+            // CraftBukkit end
             packet.func_73279_a(this.field_74485_r);
         }
 
@@ -382,14 +393,14 @@
         }
     }
 
-    private void func_74448_j() throws IOException
+    private void func_74448_j() throws IOException   // CraftBukkit - throws IOException
     {
         this.field_74465_f = true;
         InputStream inputstream = this.field_74479_i.getInputStream();
         this.field_74477_k = new DataInputStream(CryptManager.func_75888_a(this.field_74488_z, inputstream));
     }
 
-    private void func_74446_k() throws IOException
+    private void func_74446_k() throws IOException   // CraftBukkit - throws IOException
     {
         this.field_74474_l.flush();
         this.field_74466_g = true;
